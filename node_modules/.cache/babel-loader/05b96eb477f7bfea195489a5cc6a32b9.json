{"ast":null,"code":"import _classCallCheck from \"/home/pratham82/Dev/React-QuizApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pratham82/Dev/React-QuizApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/pratham82/Dev/React-QuizApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/pratham82/Dev/React-QuizApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/pratham82/Dev/React-QuizApp/src/components/MainQuiz.js\";\nimport React from \"react\";\nimport { quizData } from \"./quizData\";\n\nvar MainQuiz = /*#__PURE__*/function (_React$Component) {\n  _inherits(MainQuiz, _React$Component);\n\n  var _super = _createSuper(MainQuiz);\n\n  function MainQuiz() {\n    var _this;\n\n    _classCallCheck(this, MainQuiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentQuestion: 0,\n      myAnswer: null,\n      options: [],\n      score: 0,\n      disabled: true,\n      isEnd: false\n    };\n\n    _this.loadQuizData = function () {\n      _this.setState(function () {\n        return {\n          questions: quizData[_this.state.currentQuestion].question,\n          answer: quizData[_this.state.currentQuestion].answer,\n          options: quizData[_this.state.currentQuestion].options\n        };\n      });\n    };\n\n    _this.nextQuestionHandler = function () {\n      var _this$state = _this.state,\n          myAnswer = _this$state.myAnswer,\n          answer = _this$state.answer,\n          score = _this$state.score;\n\n      if (myAnswer === answer) {\n        _this.setState({\n          score: score + 1\n        });\n      }\n\n      _this.setState({\n        currentQuestion: _this.state.currentQuestion + 1\n      });\n\n      console.log(_this.state.currentQuestion);\n    };\n\n    _this.checkAnswer = function (answer) {\n      _this.setState({\n        myAnswer: answer,\n        disabled: false\n      });\n    };\n\n    _this.finishHandler = function () {\n      if (_this.state.currentQuestion === quizData.length - 1) {\n        _this.setState({\n          isEnd: true\n        });\n      }\n\n      if (_this.state.myAnswer === _this.state.answer) {\n        _this.setState({\n          score: _this.state.score + 1\n        });\n      }\n    };\n\n    _this.reloadPage = function () {\n      return window.location.reload();\n    };\n\n    return _this;\n  }\n\n  _createClass(MainQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadQuizData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.state.currentQuestion !== prevState.currentQuestion) {\n        this.setState(function () {\n          return {\n            disabled: true,\n            questions: quizData[_this2.state.currentQuestion].question,\n            options: quizData[_this2.state.currentQuestion].options,\n            answer: quizData[_this2.state.currentQuestion].answer\n          };\n        });\n      }\n    } //check answer\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          options = _this$state2.options,\n          myAnswer = _this$state2.myAnswer,\n          currentQuestion = _this$state2.currentQuestion,\n          isEnd = _this$state2.isEnd;\n      return isEnd ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"over\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, \"QUIZ Over\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, \"Your Final score is\", \" \", /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"score\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \" \", this.state.score)), \" \", \"points\", \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"answerintro\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \" \", \"The correct answer's for the questions was\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, quizData.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"ui floating message options\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }, item.answer);\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.reloadPage,\n        className: \"ui inverted button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, \" \", \"Try Again\", \" \"))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, this.state.questions, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"remaining\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, \"Questions \".concat(currentQuestion, \"  out of \").concat(quizData.length - 1, \" remaining \")), options.map(function (option) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: option.id,\n          className: \"ui floating message options\\n         \".concat(myAnswer === option ? \"selected\" : null, \"\\n         \"),\n          onClick: function onClick() {\n            return _this3.checkAnswer(option);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }\n        }, option);\n      }), currentQuestion < quizData.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"con\",\n        style: {\n          display: \"grid\",\n          placeItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button \",\n        disabled: this.state.disabled,\n        \"text-align\": \"center\",\n        onClick: this.nextQuestionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"Next\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \" Test\")), currentQuestion === quizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui inverted button\",\n        onClick: this.finishHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }, \"Finish\"));\n    }\n  }]);\n\n  return MainQuiz;\n}(React.Component);\n\nexport default MainQuiz;","map":{"version":3,"sources":["/home/pratham82/Dev/React-QuizApp/src/components/MainQuiz.js"],"names":["React","quizData","MainQuiz","state","currentQuestion","myAnswer","options","score","disabled","isEnd","loadQuizData","setState","questions","question","answer","nextQuestionHandler","console","log","checkAnswer","finishHandler","length","reloadPage","window","location","reload","prevProps","prevState","map","item","index","option","id","display","placeItems","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { quizData } from \"./quizData\";\n\nclass MainQuiz extends React.Component {\n  state = {\n    currentQuestion: 0,\n    myAnswer: null,\n    options: [],\n    score: 0,\n    disabled: true,\n    isEnd: false,\n  };\n\n  loadQuizData = () => {\n    this.setState(() => {\n      return {\n        questions: quizData[this.state.currentQuestion].question,\n        answer: quizData[this.state.currentQuestion].answer,\n        options: quizData[this.state.currentQuestion].options,\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.loadQuizData();\n  }\n\n  nextQuestionHandler = () => {\n    const { myAnswer, answer, score } = this.state;\n\n    if (myAnswer === answer) {\n      this.setState({\n        score: score + 1,\n      });\n    }\n\n    this.setState({\n      currentQuestion: this.state.currentQuestion + 1,\n    });\n    console.log(this.state.currentQuestion);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          questions: quizData[this.state.currentQuestion].question,\n          options: quizData[this.state.currentQuestion].options,\n          answer: quizData[this.state.currentQuestion].answer,\n        };\n      });\n    }\n  }\n\n  //check answer\n  checkAnswer = (answer) => {\n    this.setState({ myAnswer: answer, disabled: false });\n  };\n  finishHandler = () => {\n    if (this.state.currentQuestion === quizData.length - 1) {\n      this.setState({\n        isEnd: true,\n      });\n    }\n    if (this.state.myAnswer === this.state.answer) {\n      this.setState({\n        score: this.state.score + 1,\n      });\n    }\n  };\n\n  reloadPage = () => window.location.reload();\n\n  render() {\n    const { options, myAnswer, currentQuestion, isEnd } = this.state;\n\n    return isEnd ? (\n      <div className=\"result\">\n        <h2 className=\"over\">QUIZ Over</h2>\n        <h2>\n          Your Final score is{\" \"}\n          <h1 className=\"score\">\n            <strong> {this.state.score}</strong>\n          </h1>{\" \"}\n          points{\" \"}\n        </h2>\n        <div className=\"Container\">\n          <p className=\"answerintro\">\n            {\" \"}\n            The correct answer's for the questions was\n          </p>\n          <ul>\n            {quizData.map((item, index) => (\n              <li className=\"ui floating message options\" key={index}>\n                {item.answer}\n              </li>\n            ))}\n          </ul>\n          <button onClick={this.reloadPage} className=\"ui inverted button\">\n            {\" \"}\n            Try Again{\" \"}\n          </button>\n        </div>\n      </div>\n    ) : (\n      <div className=\"Container\">\n        <h1 className=\"question\">{this.state.questions} </h1>\n        <span className=\"remaining\">{`Questions ${currentQuestion}  out of ${\n          quizData.length - 1\n        } remaining `}</span>\n        {options.map((option) => (\n          <p\n            key={option.id}\n            className={`ui floating message options\n         ${myAnswer === option ? \"selected\" : null}\n         `}\n            onClick={() => this.checkAnswer(option)}\n          >\n            {option}\n          </p>\n        ))}\n        {currentQuestion < quizData.length - 1 && (\n          <div\n            className=\"con\"\n            style={{ display: \"grid\", placeItems: \"center\" }}\n          >\n            <button\n              className=\"ui inverted button \"\n              disabled={this.state.disabled}\n              text-align=\"center\"\n              onClick={this.nextQuestionHandler}\n            >\n              Next\n            </button>\n            <br />\n\n            <button className=\"ui inverted button\"> Test</button>\n          </div>\n        )}\n        {/* //adding a finish button */}\n        {currentQuestion === quizData.length - 1 && (\n          <button className=\"ui inverted button\" onClick={this.finishHandler}>\n            Finish\n          </button>\n        )}\n      </div>\n    );\n  }\n}\nexport default MainQuiz;\n"]},"metadata":{},"sourceType":"module"}